apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: celeryworker
  namespace: local
  name: celeryworker
spec:
  replicas: 3
  selector:
    matchLabels:
      service: celeryworker
  template:
    metadata:
      labels:
        service: celeryworker
    spec:
      containers:
        - name: celeryworker
          image: jonathanurzolamaldonado/sicop_local_celeryworker
          args:
            - /start-celeryworker
          envFrom:
            - configMapRef:
                name: envs-local-django
            - configMapRef:
                name: envs-local-postgres
            - secretRef:
                name: secrets-local-django
            - secretRef:
                name: secrets-local-postgres
          env:
            - name: CELERY_BROKER_URL
              value: $(REDIS_URL)
            - name: DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
          readinessProbe:
            exec:
              command:
                [
                  "bash",
                  "-c",
                  "celery inspect ping -A config.celery_app -d celery@$HOSTNAME",
                ]
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 10
          volumeMounts:
            - mountPath: /app/sicop/media
              name: media-sicop
      restartPolicy: Always
      volumes:
        - name: media-sicop
          persistentVolumeClaim:
            claimName: media-sicop
      terminationGracePeriodSeconds: 3600 # depends on tasks.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
