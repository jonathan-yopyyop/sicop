apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: django
  namespace: local
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      service: django
  template:
    metadata:
      labels:
        service: django
    spec:
      containers:
        - args:
            - /start
          image: jonathanurzolamaldonado/sicop_local_django
          name: django
          ports:
            - name: gunicorn
              containerPort: 8080
          envFrom:
            - configMapRef:
                name: envs-local-django
            - configMapRef:
                name: envs-local-postgres
            - secretRef:
                name: secrets-local-django
            - secretRef:
                name: secrets-local-postgres
          env:
            - name: CELERY_BROKER_URL
              value: $(REDIS_URL)
            - name: DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
          resources:
            requests:
              memory: "250Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /sicop/sicop/media
              name: media
          livenessProbe:
            httpGet:
              path: /
              port: gunicorn
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: gunicorn
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
---
apiVersion: v1
kind: Service
metadata:
  namespace: local
  name: django
  labels:
    service: django
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    service: django
