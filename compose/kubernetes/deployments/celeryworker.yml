apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: celeryworker
  namespace: local
  name: celeryworker
spec:
  replicas: 1
  selector:
    matchLabels:
      service: celeryworker
  template:
    metadata:
      labels:
        service: celeryworker
    spec:
      containers:
        - name: celeryworker
          image: jonathanurzolamaldonado/sicop_local_celeryworker
          resources:
            requests:
              memory: "250Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          args:
            - /start-celeryworker
          envFrom:
            - configMapRef:
                name: envs-local-django
            - configMapRef:
                name: envs-local-postgres
            - secretRef:
                name: secrets-local-django
            - secretRef:
                name: secrets-local-postgres
          env:
            - name: CELERY_BROKER_URL
              value: $(REDIS_URL)
            - name: DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
          # readinessProbe:
          #   exec:
          # command: ["celery", "-A", "config.celery_app", "worker", "-l", "INFO"]
          # command: ["bash", "-c", "celery -A config.celery_app worker -l INFO"]
          # initialDelaySeconds: 30
          # periodSeconds: 60
          # successThreshold: 10
          volumeMounts:
            - mountPath: /app/sicop/media
              name: media
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
      terminationGracePeriodSeconds: 3600 # depends on tasks.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
